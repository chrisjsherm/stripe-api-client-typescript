AWSTemplateFormatVersion: '2010-09-09'
Description: Launch an EC2 instance with custom storage and monitoring

Parameters:
  ApplicationTag:
    Type: String
    Default: "medspaah"
    Description: "Tag for the name of this application"

  EcrRepositoryArn:
    Type: String
    Description: "Amazon resource name of your elastic container registry repository" 

  InstanceAMI:
    Description: EC2 Image ID
    Type: String
    Default: ami-0ba9883b710b05ac6
    ConstraintDescription: must be a valid ID in the target region

  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t3.medium
    ConstraintDescription: must be a valid EC2 instance type.

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  NotifyAt:
    Description: Email address to send SNS notifications to
    Type: String
    AllowedPattern: '[^@]+@[^@]+\.[^@]+'

  OrganizationTag:
    Type: String
    Default: "acme-corp"
    Description: "Tag for the name of your organization"

  ParameterStoreArnTurnstileSecretKey:
    Type: String
    Description: "Amazon resource name for the Cloudflare Turnstile secret key"

  SshCidrIp:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    Default: 0.0.0.0/0
    MinLength: "9"
    MaxLength: "18"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  SubnetId:
    Description: The subnet ID to launch the instance in
    Type: AWS::EC2::Subnet::Id

  VolumeSize:
    Description: The size of the EBS volume in GB
    Type: Number
    Default: 20
    MinValue: 8
    MaxValue: 1024

  VpcId:
    Description: The VPC ID to launch the instance in
    Type: AWS::EC2::VPC::Id

Resources:
  RoleEC2InstanceAccess:
    Type: "AWS::IAM::Role"
    Properties: 
      Tags:
        - Key: "application"
          Value: !Ref ApplicationTag
        - Key: "organization"
          Value: !Ref OrganizationTag
        - Key: "AppManagerCFNStackKey"
          Value: !Ref 'AWS::StackId'
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Principal: 
              Service: "ec2.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies: 
        - PolicyName: "SSMParameterStorePolicy"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - Effect: "Allow"
                Action: 
                  - "ssm:GetParameter"
                  - "ssm:GetParameters"
                  - "ssm:GetParametersByPath"
                Resource: !Ref ParameterStoreArnTurnstileSecretKey
        - PolicyName: "SESPolicy"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - Effect: "Allow"
                Action: 
                  - "ses:SendEmail"
                  - "ses:SendRawEmail"
                # Action seems to apply to the addressee, not just sender.
                Resource: "*"
        - PolicyName: "ECRGetAuthTokenPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "ecr:GetAuthorizationToken"
                # Action appears to require all-or-nothing for the repositories in the registry.
                Resource: "*"
        - PolicyName: "ECRPullPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                  - "ecr:BatchCheckLayerAvailability"
                Resource: !Ref EcrRepositoryArn
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  EC2Profile:
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Roles: 
        - Ref: "RoleEC2InstanceAccess"

  EC2Instance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - 01_setupDocker

        # Start Docker services automatically at boot
        01_setupDocker:
          commands:
            01_enable_docker:
              command: systemctl enable docker
            02_enable_containerd:
              command: systemctl enable containerd.service
    Properties: 
      Tags:
        - Key: "Name"
          Value: !Ref ApplicationTag
        - Key: "application"
          Value: !Ref ApplicationTag
        - Key: "organization"
          Value: !Ref OrganizationTag
        - Key: "AppManagerCFNStackKey"
          Value: !Ref 'AWS::StackId'
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref EC2Profile
      KeyName: !Ref KeyName
      ImageId: !Ref InstanceAMI
      SubnetId: !Ref SubnetId
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: !Ref VolumeSize
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          set -x  # Enable debugging
          exec > >(tee /var/log/user-data.log|logger -t user-data) 2>&1

          yum update -y
          yum install -y docker
          service docker start
          usermod -a -G docker ec2-user
          docker --version
          curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          docker-compose --version

          echo "UserData script completed"

  ElasticIP:
    Type: AWS::EC2::EIP
    Properties: 
      Tags:
        - Key: "Name"
          Value: !Ref ApplicationTag
        - Key: "application"
          Value: !Ref ApplicationTag
        - Key: "organization"
          Value: !Ref OrganizationTag
        - Key: "AppManagerCFNStackKey"
          Value: !Ref 'AWS::StackId'

  EIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref EC2Instance
      EIP: !Ref ElasticIP

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      Tags:
        - Key: "Name"
          Value: !Sub "${ApplicationTag}-sg"
        - Key: "application"
          Value: !Ref ApplicationTag
        - Key: "organization"
          Value: !Ref OrganizationTag
        - Key: "AppManagerCFNStackKey"
          Value: !Ref 'AWS::StackId'
      GroupDescription: Enable SSH access and open ports for services
      VpcId: !Ref VpcId
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SshCidrIp
          Description: "SSH"
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          Description: "HTTP"
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          Description: "HTTPS"
          CidrIp: 0.0.0.0/0

  NotificationsSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref NotifyAt
      Protocol: "email"
      TopicArn: !Ref NotificationsTopic

  NotificationsTopic:
    Type: AWS::SNS::Topic
    Properties:
      Tags:
        - Key: "application"
          Value: !Ref ApplicationTag
        - Key: "organization"
          Value: !Ref OrganizationTag
        - Key: "AppManagerCFNStackKey"
          Value: !Ref 'AWS::StackId'
  
  CPUAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties: 
      Tags:
        - Key: "application"
          Value: !Ref ApplicationTag
        - Key: "organization"
          Value: !Ref OrganizationTag
        - Key: "AppManagerCFNStackKey"
          Value: !Ref 'AWS::StackId'
      AlarmDescription: "Alarm for excessive CPU usage"
      Namespace: "AWS/EC2"
      MetricName: "CPUUtilization"
      Dimensions:
        - Name: "InstanceId"
          Value: !Ref EC2Instance
      Statistic: "Average"
      Period: "300"
      EvaluationPeriods: "1"
      Threshold: "80"
      ComparisonOperator: "GreaterThanThreshold"
      AlarmActions:
        - !Ref NotificationsTopic
      Unit: "Percent"

  MemoryAlarmHigh:
    Type: AWS::CloudWatch::Alarm
    Properties: 
      Tags:
        - Key: "application"
          Value: !Ref ApplicationTag
        - Key: "organization"
          Value: !Ref OrganizationTag
        - Key: "AppManagerCFNStackKey"
          Value: !Ref 'AWS::StackId'
      AlarmDescription: "Alarm for excessive memory usage"
      Namespace: "CWAgent"
      MetricName: "mem_used_percent"
      Dimensions:
        - Name: "InstanceId"
          Value: !Ref EC2Instance
      Statistic: "Average"
      Period: "300"
      EvaluationPeriods: "1"
      Threshold: "80"
      ComparisonOperator: "GreaterThanThreshold"
      AlarmActions:
        - !Ref NotificationsTopic
      Unit: "Percent"

Outputs:
  InstanceId:
    Description: Instance ID of the newly created EC2 instance
    Value: !Ref EC2Instance
  PublicIP:
    Description: Public IP address of the EC2 instance
    Value: !GetAtt EC2Instance.PublicIp
